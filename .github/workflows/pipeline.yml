name: Lint, Test, Build and Push the app 🚀

on:
  [push]

env: 
  APP_IS_RUNNING_IN_PIPELINE: true;

jobs:
  lint-frontend: 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 20
          check-latest: true
  
      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules 📦
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-frontend-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-frontend-yarn-

      - name: Install dependencies 📦
        run: cd frontend && yarn

      - name: Run linter 👀
        run: cd frontend && yarn lint

      - name: Build 🏗
        run: cd frontend && yarn build
  

  lint-and-test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 20
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules 📦
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies 📦
        run: cd backend && yarn

      - name: Run linter 👀
        run: cd backend && yarn lint

      - name: Build 🏗
        run: cd backend && yarn build

      - name: Run tests 🧪
        run: cd backend && yarn test


  build-packages:
      if: github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/v')
      needs: [lint-frontend, lint-and-test-backend]
      runs-on: ubuntu-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update backend app version 📝
        run: |
          if [ -f "backend/app-version.ts" ]; then
            rm backend/app-version.ts
          fi
          
          echo "export const appVersion = '${{ github.ref_name }}';" > app-version.ts
          echo "export const buildSha = '$(echo ${{ github.sha }} | cut -c 1-8)';" >> app-version.ts
          echo "export const buildTime = '$(date -u +"%Y-%m-%dT%H:%M:%SZ")';" >> app-version.ts

      - name: Update frontend app version 📝
        run: |
          if [ -f "frontend/app-version.ts" ]; then
            rm frontend/app-version.ts
          fi
          
          echo "export const appVersion = '${{ github.ref_name }}';" > app-version.ts
          echo "export const buildSha = '$(echo ${{ github.sha }} | cut -c 1-8)';" >> app-version.ts
          echo "export const buildTime = '$(date -u +"%Y-%m-%dT%H:%M:%SZ")';" >> app-version.ts
          
      - name: Login to registry 🔐
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.ACTOR }}
          password: ${{ secrets.INVOICE_APP_PAT }}

      - name: Frontend - Build and push image 🚀
        uses: docker/build-push-action@v3
        with:
          push: true
          context: "./frontend"
          file: "./frontend/Dockerfile"          
          tags: ghcr.io/pscldev/invoice-app/frontend:latest,ghcr.io/pscldev/invoice-app/frontend:${{ github.ref_name }}
      
      - name: Backend - Build and push image 🚀
        uses: docker/build-push-action@v3
        with:
          push: true
          context: "./backend"
          file: "./backend/Dockerfile"
          tags: ghcr.io/pscldev/invoice-app/backend:latest,ghcr.io/pscldev/invoice-app/backend:${{ github.ref_name }}
